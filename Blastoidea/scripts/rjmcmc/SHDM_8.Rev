beta_scale ~ dnLognormal( 0.0, sd=2*0.587405 )
n_max_states <- 4


  idx = 1
morpho_f_bystate[1] <- morpho_f

for (i in 2:n_max_states) {
morpho_bystate_2[i] <- morpho_f 
    morpho_f_bystate[i].setNumStatesPartition(i)
     nc = morpho_bystate_2[i].nchar()
    # for non-empty character blocks
      print("nchars:", nc)
      print("nSTATES:", i)
      cats := fnDiscretizeBeta(beta_scale, beta_scale, i)
      for (x in 1:cats.size())
      {
        Q_SHDM_f8[x] := fnF81(simplex(cats))
        Q_SHDM_f8[x]
        }
        mat_prior_f8 <- rep(1,i)
        matrix_probs_f8 ~ dnDirichlet(mat_prior_f8)
        matrix_probs_f8
        moves.append( mvBetaSimplex(matrix_probs_f8, weight=3.0) )
        moves.append( mvDirichletSimplex(matrix_probs_f8, weight=1.5) )

        idx = idx + 1
        }

idx = 1
     n_max_states <- 5
morpho_nf_bystate[1] <- morpho_nf
for (i in 2:n_max_states) {
morpho_bystate_2[i] <- morpho_nf
    morpho_nf_bystate_2[i].setNumStatesPartition(i)
     nc = morpho_bystate_2[i].nchar()
    # for non-empty character blocks
      print("nchars:", nc)
      print("nSTATES:", i)
      cats := fnDiscretizeBeta(beta_scale, beta_scale, 1)
      for (x in 1:cats.size())
      {
        Q_SHDM_nf8[x] := fnF81(simplex(cats))
        Q_SHDM_nf8[x]
        }
        mat_prior_nf8 <- rep(1,i)
        matrix_probs_nf8 ~ dnDirichlet(mat_prior_nf8)
        matrix_probs_nf8
        moves.append( mvBetaSimplex(matrix_probs_nf8, weight=3.0) )
        moves.append( mvDirichletSimplex(matrix_probs_nf8, weight=1.5) )

        idx = idx + 1
        }